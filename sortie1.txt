    mot/id/entier:i
    =
    mot/id/entier:8
operande-> MOT
        créer quadOP:0  str:8
concatenation-> operande 
    ;
instruction-> ID = concatenation
        créer quadOP:1  str:i
liste_instruction->instruction
        créer quadOP:2  cst:0
    declare
    mot/id/entier:tablo
    [
    mot/id/entier:5
    ]
instruction-> DECLARE ID [ ENTIER ] 
ToInt: 5
        créer quadOP:3  str:tablo
        créer quadOP:4  cst:5
liste_instruction->liste_instructions ; instruction
        créer quadOP:5  cst:0
    ;
    echo
    $
    {
    mot/id/entier:i
    }
operande-> $ { ID }
        créer quadOP:6  str:i
liste_operandes-> operande 
        créer quadOP:7  cst:1
        créer quadOP:8  str:$
    ;
instruction-> MYECHO liste_operandes 
liste_instruction->liste_instructions ; instruction
        créer quadOP:9  cst:0
    exit
instruction->EXIT
liste_instruction->liste_instructions ; instruction
        créer quadOP:10  cst:0
programme->liste_instruction

Affichage Lglobal:
ligne 1:  res: id:i  EQUAL  op1: string:8  op2: NULL 
ligne 2:  res: addr:3  GOTO  op1: NULL  op2: NULL 
ligne 3:  res: tab:tablo  TAB[]CREAT  op1: cst:5  op2: NULL 
ligne 4:  res: addr:5  GOTO  op1: NULL  op2: NULL 
ligne 5:  res: tab:$  TAB[]EQUAL  op1: cst:1  op2: id:i 
ligne 6:  res: addr:7  GOTO  op1: NULL  op2: NULL 
ligne 7:  res: NULL  EXIT  op1: NULL  op2: NULL 
ligne 8:  res: addr:9  GOTO  op1: NULL  op2: NULL 
Yacc return : ->0

### MIPS: ###

 EQUAL 
 GOTO 
 TAB[]CREAT 
 GOTO 
 TAB[]EQUAL 
 GOTO 
 EXIT 
 GOTO 

### Table of symbols : ###

n°29818 : ID			Type : string      	i
n°94147 : Array of 5 elements				tablo

Free Lglobal:


