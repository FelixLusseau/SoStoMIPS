    mot/id/entier:i
    =
    mot/id/entier:8
operande-> MOT
        crÃ©er quadOP:0  str:8
concatenation-> operande 
    ;
instruction-> ID = concatenation
[91mUpdating type of i to 1[0m
        crÃ©er quadOP:1  str:i
liste_instruction->instruction
        crÃ©er quadOP:2  cst:0
    mot/id/entier:c
    =
    mot/id/entier:4
operande-> MOT
        crÃ©er quadOP:3  str:4
concatenation-> operande 
    ;
instruction-> ID = concatenation
[91mUpdating type of c to 1[0m
        crÃ©er quadOP:4  str:c
liste_instruction->liste_instructions ; instruction
        crÃ©er quadOP:5  cst:0
    mot/id/entier:a
    =
    $
    (
    expr
    mot/id/entier:1
operande_entier-> ENTIER 
ToInt: 1
        crÃ©er quadOP:6  cst:1
produit_entier-> operande_entier 
    +
somme_entiere-> produit_entier 
    mot/id/entier:2
operande_entier-> ENTIER 
ToInt: 2
        crÃ©er quadOP:7  cst:2
produit_entier-> operande_entier 
    +
somme_entiere-> somme_entiere plus_ou_moin produit_entier 
        crÃ©er quadOP:8  str:__TEMP__1
    mot/id/entier:3
operande_entier-> ENTIER 
ToInt: 3
        crÃ©er quadOP:9  cst:3
produit_entier-> operande_entier 
    )
somme_entiere-> somme_entiere plus_ou_moin produit_entier 
        crÃ©er quadOP:10  str:__TEMP__2
operande-> $ ( EXPR somme_entiere )
concatenation-> operande 
    ;
instruction-> ID = concatenation
[91mUpdating type of a to 1[0m
        crÃ©er quadOP:11  str:a
liste_instruction->liste_instructions ; instruction
        crÃ©er quadOP:12  cst:0
    exit
instruction->EXIT
liste_instruction->liste_instructions ; instruction
        crÃ©er quadOP:13  cst:0
programme->liste_instruction

Affichage Lglobal:
ligne 1:  res: id:i  EQUAL  op1: string:8  op2: NULL 
ligne 2:  res: addr:3  GOTO  op1: NULL  op2: NULL 
ligne 3:  res: id:c  EQUAL  op1: string:4  op2: NULL 
ligne 4:  res: addr:5  GOTO  op1: NULL  op2: NULL 
ligne 5:  res: id:__TEMP__1  ADD  op1: cst:1  op2: cst:2 
ligne 6:  res: id:__TEMP__2  ADD  op1: id:__TEMP__1  op2: cst:3 
ligne 7:  res: id:a  EQUAL  op1: id:__TEMP__2  op2: NULL 
ligne 8:  res: addr:9  GOTO  op1: NULL  op2: NULL 
ligne 9:  res: NULL  EXIT  op1: NULL  op2: NULL 
ligne 10:  res: addr:11  GOTO  op1: NULL  op2: NULL 
Yacc return : ->0

### MIPS: ###

 EQUAL 
 GOTO 
 EQUAL 
 GOTO 
 ADD 
 ADD 
 EQUAL 
 GOTO 
 EXIT 
 GOTO 

Free Lglobal:


