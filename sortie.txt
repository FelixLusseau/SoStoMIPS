    mot/id/entier:j
    =
    $
    (
    expr
    mot/id/entier:2
operande_entier-> ENTIER 
ToInt: 2
        créer quadOP:0  cst:2
produit_entier-> operande_entier 
    +
somme_entiere-> produit_entier 
    mot/id/entier:6
operande_entier-> ENTIER 
ToInt: 6
        créer quadOP:1  cst:6
produit_entier-> operande_entier 
    )
somme_entiere-> somme_entiere plus_ou_moin produit_entier 
        créer quadOP:2  str:__TEMP__1
operande-> $ ( EXPR somme_entiere )
concatenation-> operande 
    ;
instruction-> ID = concatenation
        créer quadOP:3  str:j
liste_instruction->instruction
        créer quadOP:4  cst:0
    exit
instruction->EXIT
liste_instruction->liste_instructions ; instruction
        créer quadOP:5  cst:0
programme->liste_instruction

Affichage Lglobal:
ligne 1:  res: id:__TEMP__1  ADD  op1: cst:2  op2: cst:6 
ligne 2:  res: id:j  EQUAL  op1: id:__TEMP__1  op2: NULL 
ligne 3:  res: addr:4  GOTO  op1: NULL  op2: NULL 
ligne 4:  res: NULL  EXIT  op1: NULL  op2: NULL 
ligne 5:  res: addr:6  GOTO  op1: NULL  op2: NULL 
Yacc return : ->0

### MIPS: ###

 ADD 
 EQUAL 
 GOTO 
 EXIT 
 GOTO 

### Table of symbols : ###

n°29819 : ID			Type : string      	j

Free Lglobal:


